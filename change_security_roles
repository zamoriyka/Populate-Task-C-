function SecurityRoleChanging() {
    console.log(Xrm.Page.context.getUserRoles());

    var currentUserRules = Xrm.Page.context.getUserRoles();
    for (var i = 0; i < currentUserRules.lenght; i++) {
        var userRoleId = currentUserRoles[i];
        var userRoleName = getRoleName(userRoleId);
            if (userRoleName == "System Administrator") {
                return true;
                console.log("This is System Administrator Role!")
            } else {
                console.log("The condition doesn't work!");
            }
        }
    return false;
   }


function GetRoleName(userRoles) {
    var req = new XMLHttpRequest();
    req.open("GET", Xrm.Page.context.getClientUrl() + "/api/data/v8.0/roles?$select=name&$filter=roleid eq " + userRoles);
    req.setRequestHeader("OData-MaxVersion", "4.0");
    req.setRequestHeader("OData-Version", "4.0");
    req.setRequestHeader("Accept", "application/json");
    req.setRequestHeader("Content-Type", "application/json; charset=utf-8");
    req.setRequestHeader("Prefer", "odata.include-annotations=\"*\"");
    req.onreadystatechange = function () {
        if (this.readyState === 4) {
            req.onreadystatechange = null;
            if (this.status === 200) {
                var result = JSON.parse(this.response);
                var roleName = result["name"];
                alert(roleName);
            } else {
                Xrm.Utility.alertDialog(this.statusText);
            }
        }
    };
    req.send();
}
